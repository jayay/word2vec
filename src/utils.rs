#[cfg(feature = "simd")]
extern crate packed_simd;

#[cfg(feature = "simd")]
use self::packed_simd::f32x4;

#[cfg(feature = "simd")]
pub fn dot_product(x: &[f32], y: &[f32]) -> f32 {
    assert_eq!(x.len(), y.len());
    assert!(x.len() % 4 == 0);

    x.chunks_exact(4)
        .map(f32x4::from_slice_unaligned)
        .zip(y.chunks_exact(4).map(f32x4::from_slice_unaligned))
        .map(|(x, y)| x * y)
        .sum::<f32x4>()
        .sum()
}

#[cfg(not(feature = "simd"))]
pub fn dot_product(arr1: &Vec<f32>, arr2: &Vec<f32>) -> f32 {
    let mut result: f32 = 0.0;
    for (elem1, elem2) in arr1.iter().zip(arr2.iter()) {
        result += elem1 * elem2;
    }
    return result;
}

#[cfg(feature = "simd")]
pub fn vector_norm(vector: &mut Vec<f32>) {
    assert!(vector.len() % 4 == 0);

    let sum = 1.0
        / vector
            .chunks_exact(4)
            .map(f32x4::from_slice_unaligned)
            .map(|x| x * x)
            .sum::<f32x4>()
            .sum()
            .sqrt();

    for mut chunk in vector.chunks_exact_mut(4) {
        let mut simd = f32x4::from_slice_unaligned(&mut chunk);
        simd *= sum;
        unsafe {
            simd.write_to_slice_unaligned_unchecked(&mut chunk)
        }
    }
}

#[cfg(not(feature = "simd"))]
pub fn vector_norm(vector: &mut Vec<f32>) {
    let sum = 1.0 / vector.iter().fold(0f32, |sum, &x| sum + (x * x)).sqrt();
    for x in vector.iter_mut() {
        (*x) *= sum;
    }
}

/// Get the mean (average) of the given Iterator of numbers
pub fn mean<Iterable: Iterator<Item = f32>>(numbers: Iterable) -> f32 {
    let (sum, count) = numbers.fold((0f32, 0), |(sum, count), x| (sum + x, count + 1));
    sum / (count as f32)
}


#[cfg(test)]
mod tests {
    use super::*;
    use test::Bencher;

    #[test]
    fn test_dot_product() {
        let x = vec![0.12345, 0.56789, 0.4, -434.4];
        let y = vec![0.2453, -0.234234, -0.9323, 0.1235];
        assert!((-54.124058 - dot_product(&x, &y)).abs() < 0.000005);
    }

     #[bench]
    fn bench_dot_product(b: &mut Bencher) {
        let x = test::black_box(vec![
0.0684790313243866,
-0.0031401915475726128,
-0.019410181790590286,
0.0086599076166749,
-0.047384943813085556,
-0.09188097715377808,
0.04436396434903145,
-0.008436143398284912,
-0.22183600068092346,
0.07932717353105545,
0.05228390917181969,
0.05150792375206947,
0.026866234838962555,
0.04288622736930847,
-0.15044794976711273,
0.08015137165784836,
-0.16841024160385132,
0.040421273559331894,
-0.04847361147403717,
0.032074786722660065,
0.10749403387308121,
0.09666208177804947,
-0.05602366104722023,
0.1278672218322754,
0.1527198851108551,
-0.22081345319747925,
0.3165488839149475,
-0.09437593072652817,
0.04206101596355438,
-0.03982861340045929,
0.013013677671551704,
-0.057035621255636215,
0.17057889699935913,
0.10726488381624222,
-0.06943566352128983,
0.05606011301279068,
0.07516047358512878,
0.000722760334610939,
-0.03597895801067352,
0.0954667329788208,
0.017190387472510338,
0.2115980088710785,
0.11484047025442123,
-0.013076135888695717,
0.08560733497142792,
0.03941025212407112,
0.00024833946372382343,
0.09489869326353073,
-0.03042999468743801,
-0.09735766053199768,
0.05098225921392441,
0.2424902319908142,
0.04447738453745842,
0.10176374018192291,
-0.022047601640224457,
-0.045035768300294876,
0.03517073392868042,
-0.1049334853887558,
0.03391944617033005,
0.06109119579195976,
0.05654885619878769,
-0.12513835728168488,
0.09589995443820953,
0.16421286761760712,
-0.06271743774414062,
-0.02411491423845291,
-0.016013791784644127,
0.19009046256542206,
0.17651182413101196,
0.04340469464659691,
0.035255737602710724,
0.03675955533981323,
-0.11878952383995056,
-0.05398166552186012,
0.053118545562028885,
-0.07951097935438156,
0.003044293262064457,
-0.018724190071225166,
-0.06830195337533951,
0.026909612119197845,
0.09557144343852997,
0.08569542318582535,
-0.06496935337781906,
0.09637733548879623,
0.043329160660505295,
0.053797367960214615,
0.032627981156110764,
-0.018402598798274994,
0.14799197018146515,
0.06884229183197021,
0.005214586388319731,
0.1637745350599289,
0.05038924887776375,
-0.0736374780535698,
-0.27215462923049927,
0.03732326254248619,
0.1360391229391098,
0.13788296282291412,
0.02049262821674347,
-0.09307818859815598]);
        let y = test::black_box(vec![0.08459824323654175,
-0.03192903846502304,
-0.03599567711353302,
0.0191175676882267,
-0.11358077079057693,
-0.02102040685713291,
-0.013204093091189861,
0.09533848613500595,
-0.201278954744339,
0.050777237862348557,
0.014905111864209175,
-0.0050270818173885345,
0.08085786551237106,
-0.037310875952243805,
-0.06577232480049133,
0.10547840595245361,
-0.12798316776752472,
0.03514998406171799,
0.050002869218587875,
0.028460834175348282,
0.06396907567977905,
-0.05392413213849068,
-0.05694406107068062,
0.09261886030435562,
0.11475714296102524,
-0.17028063535690308,
0.23477737605571747,
-0.040971431881189346,
0.07727374881505966,
-0.1299651712179184,
0.058084242045879364,
-0.06379084289073944,
0.19561336934566498,
0.16871377825737,
-0.08434152603149414,
-0.006961720064282417,
-0.02538246475160122,
0.026607556268572807,
0.01978573016822338,
0.11424760520458221,
-0.03936338052153587,
0.19285228848457336,
0.0873933956027031,
-0.05939469859004021,
-0.03732304647564888,
0.016437778249382973,
0.02472241222858429,
0.18238435685634613,
-0.05198109522461891,
-0.12432301044464111,
0.025443753227591515,
0.3246174454689026,
0.04150254651904106,
0.06662710011005402,
-0.00917124655097723,
-0.011023498140275478,
0.09879019856452942,
-0.07820215821266174,
-0.001535856630653143,
0.04070601239800453,
0.09090539813041687,
-0.1202862411737442,
0.1030479222536087,
0.2632890045642853,
0.07130084186792374,
-0.007235344499349594,
-0.005536441691219807,
0.12568385899066925,
0.11174403876066208,
0.009066494181752205,
0.012060293927788734,
-0.034856803715229034,
-0.04452359676361084,
-0.00907915085554123,
0.0008905436843633652,
-0.12303858995437622,
0.005558813456445932,
0.03555278480052948,
-0.142161026597023,
-0.0357360802590847,
0.08928920328617096,
0.11283605545759201,
-0.14252926409244537,
0.0693311095237732,
0.05078267306089401,
0.00459040142595768,
0.01708434894680977,
-0.01078629307448864,
0.05785799026489258,
0.10142679512500763,
0.025846712291240692,
0.19291622936725616,
0.01734558679163456,
0.0023140334524214268,
-0.3207026422023773,
0.02790519781410694,
0.13194125890731812,
0.07247861474752426,
0.0024790011812001467,
-0.07138873636722565]);
        b.iter(|| dot_product(&x, &y));
    }

    #[bench]
    fn bench_vector_norm(b: &mut Bencher) {
        let mut v = test::black_box(vec![0.08459824323654175,
-0.03192903846502304,
-0.03599567711353302,
0.0191175676882267,
-0.11358077079057693,
-0.02102040685713291,
-0.013204093091189861,
0.09533848613500595,
-0.201278954744339,
0.050777237862348557,
0.014905111864209175,
-0.0050270818173885345,
0.08085786551237106,
-0.037310875952243805,
-0.06577232480049133,
0.10547840595245361,
-0.12798316776752472,
0.03514998406171799,
0.050002869218587875,
0.028460834175348282,
0.06396907567977905,
-0.05392413213849068,
-0.05694406107068062,
0.09261886030435562,
0.11475714296102524,
-0.17028063535690308,
0.23477737605571747,
-0.040971431881189346,
0.07727374881505966,
-0.1299651712179184,
0.058084242045879364,
-0.06379084289073944,
0.19561336934566498,
0.16871377825737,
-0.08434152603149414,
-0.006961720064282417,
-0.02538246475160122,
0.026607556268572807,
0.01978573016822338,
0.11424760520458221,
-0.03936338052153587,
0.19285228848457336,
0.0873933956027031,
-0.05939469859004021,
-0.03732304647564888,
0.016437778249382973,
0.02472241222858429,
0.18238435685634613,
-0.05198109522461891,
-0.12432301044464111,
0.025443753227591515,
0.3246174454689026,
0.04150254651904106,
0.06662710011005402,
-0.00917124655097723,
-0.011023498140275478,
0.09879019856452942,
-0.07820215821266174,
-0.001535856630653143,
0.04070601239800453,
0.09090539813041687,
-0.1202862411737442,
0.1030479222536087,
0.2632890045642853,
0.07130084186792374,
-0.007235344499349594,
-0.005536441691219807,
0.12568385899066925,
0.11174403876066208,
0.009066494181752205,
0.012060293927788734,
-0.034856803715229034,
-0.04452359676361084,
-0.00907915085554123,
0.0008905436843633652,
-0.12303858995437622,
0.005558813456445932,
0.03555278480052948,
-0.142161026597023,
-0.0357360802590847,
0.08928920328617096,
0.11283605545759201,
-0.14252926409244537,
0.0693311095237732,
0.05078267306089401,
0.00459040142595768,
0.01708434894680977,
-0.01078629307448864,
0.05785799026489258,
0.10142679512500763,
0.025846712291240692,
0.19291622936725616,
0.01734558679163456,
0.0023140334524214268,
-0.3207026422023773,
0.02790519781410694,
0.13194125890731812,
0.07247861474752426,
0.0024790011812001467,
-0.07138873636722565]);
        b.iter(|| vector_norm(&mut v));
    }
}
